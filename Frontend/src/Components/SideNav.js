import "./Styles/SideNav.css";
import logo from "../Assets/logo.png";
import { useState } from "react";
import { Link } from "react-router-dom";
/* const anchor = {
  hover: {
    scale: 1,
    backgroundColor: "#97dddd",
  },
  tap: {
    scale: 1.2,
  },
}; */

let navItems = [
  {
    link: "/",
    svg: (
      <svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M7.33333 1.36625C3.96445 1.70073 1.33333 4.5431 1.33333 8C1.33333 11.6819 4.3181 14.6667 8 14.6667C11.6819 14.6667 14.6667 11.6819 14.6667 8C14.6667 7.26347 14.5475 6.55581 14.3276 5.89461L8.27267 8.60833C8.0664 8.7008 7.82733 8.68247 7.6376 8.55953C7.44787 8.43667 7.33333 8.22607 7.33333 8V1.36625ZM8.66667 1.36625V6.97067L13.7816 4.67819C12.7348 2.86029 10.8561 1.58363 8.66667 1.36625ZM0 8C0 3.58172 3.58172 0 8 0C11.2533 0 14.0517 1.94189 15.3018 4.72699C15.7507 5.72693 16 6.83527 16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8Z"
          fill="white"
        />
      </svg>
    ),
    title: "Home",
  },
  {
    link: "/tasks",
    svg: (
      <svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M8.24755 1.38105C8.08861 1.31748 7.91128 1.31748 7.75235 1.38105L1.08569 4.04772C0.832593 4.14897 0.666626 4.39411 0.666626 4.66671C0.666626 4.93931 0.832593 5.18445 1.08569 5.28569L7.75235 7.95237C7.91128 8.01591 8.08861 8.01591 8.24755 7.95237L14.9142 5.28569C15.1673 5.18445 15.3333 4.93931 15.3333 4.66671C15.3333 4.39411 15.1673 4.14897 14.9142 4.04772L8.24755 1.38105ZM7.99995 6.61535L3.12835 4.66671L7.99995 2.71806L12.8715 4.66671L7.99995 6.61535Z"
          fill="white"
        />
        <path
          d="M0.714365 7.75239C0.851105 7.41052 1.23908 7.24425 1.58094 7.38099L8 9.94865L14.4191 7.38099C14.7609 7.24425 15.1489 7.41052 15.2857 7.75239C15.4224 8.09425 15.2561 8.48225 14.9143 8.61899L8.2476 11.2857C8.08866 11.3493 7.91133 11.3493 7.7524 11.2857L1.08575 8.61899C0.743898 8.48225 0.57762 8.09425 0.714365 7.75239Z"
          fill="white"
        />
        <path
          d="M0.714365 11.0858C0.851105 10.7439 1.23908 10.5776 1.58094 10.7144L8 13.282L14.4191 10.7144C14.7609 10.5776 15.1489 10.7439 15.2857 11.0858C15.4224 11.4276 15.2561 11.8156 14.9143 11.9524L8.2476 14.619C8.08866 14.6826 7.91133 14.6826 7.7524 14.619L1.08575 11.9524C0.743898 11.8156 0.57762 11.4276 0.714365 11.0858Z"
          fill="white"
        />
      </svg>
    ),
    title: "Tasks",
  },
  {
    link: "/email",
    svg: (
      <svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M9.6352 0.738908C9.9124 0.879681 10.0555 1.19339 9.98013 1.49502L8.85387 6H13.3333C13.5977 6 13.8371 6.15622 13.9436 6.39822C14.05 6.64022 14.0034 6.92227 13.8248 7.11714L6.49145 15.1171C6.27573 15.3525 5.92345 15.4019 5.65135 15.2349C5.37924 15.0679 5.26369 14.7315 5.37579 14.4326L7.038 10H2.66667C2.40799 10 2.17267 9.85034 2.06295 9.61613C1.95323 9.38187 1.98893 9.10527 2.15453 8.90654L8.8212 0.906541C9.02027 0.667688 9.35793 0.598139 9.6352 0.738908ZM4.09003 8.66667H8C8.21867 8.66667 8.4234 8.77387 8.54794 8.9536C8.67253 9.13334 8.701 9.36267 8.6242 9.5674L7.83107 11.6826L11.8179 7.33333H8C7.79473 7.33333 7.60087 7.23874 7.47453 7.07693C7.3482 6.91513 7.30347 6.70413 7.35327 6.50497L7.97973 3.99903L4.09003 8.66667Z"
          fill="white"
        />
      </svg>
    ),
    title: "Proxies",
  },
  {
    link: "/account",
    svg: (
      <svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M14 4.66663C14 6.87576 12.2092 8.66663 10 8.66663C7.79089 8.66663 6 6.87576 6 4.66663C6 2.45749 7.79089 0.666626 10 0.666626C12.2092 0.666626 14 2.45749 14 4.66663ZM12.6667 4.66663C12.6667 6.13939 11.4728 7.33329 10 7.33329C8.52723 7.33329 7.33336 6.13939 7.33336 4.66663C7.33336 3.19387 8.52723 1.99996 10 1.99996C11.4728 1.99996 12.6667 3.19387 12.6667 4.66663Z"
          fill="white"
        />
        <path
          d="M5.46595 2.05317C5.82679 1.97993 6.05992 1.62804 5.98667 1.26721C5.91343 0.906381 5.56155 0.673241 5.20071 0.746488C3.37464 1.11716 2 2.73054 2 4.66649C2 6.60243 3.37464 8.21583 5.20071 8.58649C5.56155 8.65969 5.91343 8.42656 5.98667 8.06576C6.05992 7.70496 5.82679 7.35303 5.46595 7.27983C4.24904 7.03276 3.33333 5.95582 3.33333 4.66649C3.33333 3.37715 4.24904 2.30019 5.46595 2.05317Z"
          fill="white"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M6.46531 10.3824C7.2872 9.75151 8.43273 9.33337 10.0001 9.33337C11.5674 9.33337 12.7129 9.75151 13.5348 10.3824C14.3506 11.0086 14.7944 11.8034 15.0351 12.4724C15.2469 13.0614 15.0985 13.6378 14.7433 14.0464C14.4002 14.4409 13.8808 14.6667 13.3334 14.6667H6.66673C6.1193 14.6667 5.5999 14.4409 5.25685 14.0464C4.90162 13.6378 4.75322 13.0613 4.96506 12.4724C5.20575 11.8034 5.64955 11.0086 6.46531 10.3824ZM7.2772 11.44C6.71573 11.871 6.39901 12.4252 6.21969 12.9238C6.18227 13.0278 6.20285 13.1023 6.26302 13.1715C6.33536 13.2547 6.47777 13.3334 6.66673 13.3334H13.3334C13.5223 13.3334 13.6647 13.2547 13.7371 13.1715C13.7973 13.1023 13.8178 13.0278 13.7804 12.9238C13.6011 12.4253 13.2844 11.871 12.7229 11.44C12.1677 11.0138 11.3193 10.6667 10.0001 10.6667C8.6808 10.6667 7.83247 11.0138 7.2772 11.44Z"
          fill="white"
        />
        <path
          d="M2.16733 12.8513C2.30379 12.3258 2.53803 11.7732 2.92457 11.3603C3.29197 10.9678 3.82705 10.6667 4.66671 10.6667C5.0349 10.6667 5.33337 10.3682 5.33337 10C5.33337 9.63184 5.0349 9.33337 4.66671 9.33337C3.45293 9.33337 2.56707 9.79117 1.95118 10.4491C1.35445 11.0866 1.04307 11.8759 0.876802 12.5161C0.554671 13.7565 1.60971 14.6667 2.66669 14.6667H3.1795C3.54769 14.6667 3.84617 14.3682 3.84617 14C3.84617 13.6318 3.54769 13.3334 3.1795 13.3334H2.66669C2.47833 13.3334 2.32834 13.256 2.24307 13.1618C2.16583 13.0764 2.13511 12.9753 2.16733 12.8513Z"
          fill="white"
        />
      </svg>
    ),
    title: "Accounts",
  },
  {
    link: "/settings",
    svg: (
      <svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M11.3333 2.00004V2.75072C12.4835 3.04675 13.3333 4.09081 13.3333 5.33337C13.3333 6.57593 12.4835 7.61997 11.3333 7.91604V14C11.3333 14.3682 11.0349 14.6667 10.6667 14.6667C10.2985 14.6667 10 14.3682 10 14V7.91604C8.84987 7.61997 8 6.57593 8 5.33337C8 4.09081 8.84987 3.04675 10 2.75072V2.00004C10 1.63185 10.2985 1.33337 10.6667 1.33337C11.0349 1.33337 11.3333 1.63185 11.3333 2.00004ZM10.6667 6.66671C11.4031 6.66671 12 6.06975 12 5.33337C12 4.59699 11.4031 4.00004 10.6667 4.00004C9.93027 4.00004 9.33333 4.59699 9.33333 5.33337C9.33333 6.06975 9.93027 6.66671 10.6667 6.66671Z"
          fill="white"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M5.99996 14V13.2494C7.15009 12.9533 7.99996 11.9092 7.99996 10.6667C7.99996 9.42417 7.15009 8.38011 5.99996 8.08404V2.00004C5.99996 1.63185 5.70149 1.33337 5.33329 1.33337C4.96511 1.33337 4.66663 1.63185 4.66663 2.00004V8.08404C3.51647 8.38011 2.66663 9.42417 2.66663 10.6667C2.66663 11.9092 3.51647 12.9533 4.66663 13.2494V14C4.66663 14.3682 4.96511 14.6667 5.33329 14.6667C5.70149 14.6667 5.99996 14.3682 5.99996 14ZM5.33329 12C6.06967 12 6.66663 11.4031 6.66663 10.6667C6.66663 9.93031 6.06967 9.33337 5.33329 9.33337C4.59691 9.33337 3.99996 9.93031 3.99996 10.6667C3.99996 11.4031 4.59691 12 5.33329 12Z"
          fill="white"
        />
      </svg>
    ),
    title: "Settings",
  },
];

const SideNav = () => {
  const [active, setActive] = useState(0);
  const [temp, setTemp] = useState(0);
  return (
    <div className="sidenav">
      <div className="logo">
        <img src={logo} alt="" />
      </div>
      {navItems.map((e, index) => (
        <Link
          key={index}
          title={e.title}
          onMouseOver={e => {
            if (index !== active) {
              setTemp(active);
              setActive(-1);
            }
          }}
          onMouseOut={() => {
            if (index !== active) {
              setActive(temp);
            }
          }}
          className={`sideNavItem ${active === index ? "active" : ""}`}
          /*  variants={anchor} 
          whileHover="hover"
          whileTap="tap" */
          to={e.link}
          id={e.link}
          onClick={() => setActive(index)}
        >
          {e.svg}
        </Link>
      ))}
      <p className="version">{require("electron").remote.app.getVersion()}</p>
    </div>
  );
};

export default SideNav;
